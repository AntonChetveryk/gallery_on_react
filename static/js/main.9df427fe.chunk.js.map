{"version":3,"sources":["img/Album.jpg","components/Layout.jsx","components/pages/Photo.jsx","components/Slider.jsx","getDataFunc.js","components/pages/Photos.jsx","components/pages/Album.jsx","components/pages/Albums.jsx","components/pages/Users.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Layout","className","this","props","children","React","Component","Wrapper","styled","div","Photos","photo","setIsOpen","title","src","thumbnailUrl","alt","id","onClick","useStyles","makeStyles","theme","root","maxWidth","flexGrow","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","img","overflow","width","Slider","classes","useTheme","useState","startIndex","activeStep","setActiveStep","maxSteps","photos","length","Paper","square","elevation","Typography","url","MobileStepper","steps","position","variant","nextButton","Button","size","prevActiveStep","disabled","direction","backButton","getData","Promise","resolve","reject","fetch","then","res","status","json","catch","PhotosContainer","state","isLoading","isOpen","event","target","idexOfElement","findIndex","setState","albumId","match","params","filter","item","error","alert","userId","Modal","open","onClose","aria-labelledby","aria-describedby","to","map","key","Album","numberOfPhotos","album","style","AlbumPhoto","AlbumsContainer","Albums","albums","UsersContainer","Users","users","user","name","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.9df427fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Album.97e1fab7.jpg\";","import React from \"react\";\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Layout\">\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid black;\r\n  margin: 20px;\r\n  padding: 10px;\r\n  width: 200px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  h3 {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport default class Photos extends React.Component {\r\n  render() {\r\n    const { photo, setIsOpen } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Wrapper>\r\n          <h3>{photo.title}</h3>\r\n          <img\r\n            src={photo.thumbnailUrl}\r\n            alt=\"img\"\r\n            id={photo.id}\r\n            onClick={setIsOpen}\r\n          />\r\n        </Wrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 500,\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    overflow: \"hidden\",\r\n    display: \"block\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function Slider(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(props.startIndex);\r\n  const maxSteps = props.photos.length;\r\n  const { photos } = props;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper square elevation={0} className={classes.header}>\r\n        <Typography>{photos[activeStep].title}</Typography>\r\n      </Paper>\r\n      <img\r\n        className={classes.img}\r\n        src={photos[activeStep].url}\r\n        alt={photos[activeStep].title}\r\n      />\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        variant=\"text\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            Next\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            Back\r\n          </Button>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const getData = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then((res) => {\r\n        if (res.status < 400) {\r\n          return res.json();\r\n        } else {\r\n          throw res;\r\n        }\r\n      })\r\n      .then((res) => resolve(res))\r\n      .catch((res) => {\r\n        return res.json().then(() => reject(\"Error try again later\"));\r\n      });\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Photo from \"./Photo\";\r\nimport { Modal } from \"@material-ui/core\";\r\nimport Slider from \"../Slider\";\r\nimport { getData } from \"../../getDataFunc\";\r\n\r\nconst PhotosContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\nexport default class Photos extends React.Component {\r\n  state = {\r\n    photos: [],\r\n    isLoading: false,\r\n    isOpen: false,\r\n    startIndex: 0,\r\n  };\r\n\r\n  setIsOpen = (event) => {\r\n    const { target } = event;\r\n    const { photos } = this.state;\r\n    const idexOfElement = photos.findIndex((photo) => photo.id === +target.id);\r\n    this.setState((state) => {\r\n      return { isOpen: !state.isOpen, startIndex: idexOfElement };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { albumId } = this.props.match.params;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    getData(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then((res) => res.filter((item) => item.albumId === +albumId))\r\n      .then((res) => this.setState({ photos: res, isLoading: false }))\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  render() {\r\n    const { photos, isLoading, isOpen, startIndex } = this.state;\r\n    const { userId } = this.props.match.params;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Photos</h1>\r\n        <Modal\r\n          open={isOpen}\r\n          onClose={this.setIsOpen}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          <div className=\"slider-position\">\r\n            <Slider photos={photos} startIndex={startIndex} />\r\n          </div>\r\n        </Modal>\r\n\r\n        <Link to={`/albums/${userId}`}>Назад</Link>\r\n\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <PhotosContainer>\r\n            {photos.map((photo) => (\r\n              <Photo key={photo.id} photo={photo} setIsOpen={this.setIsOpen} />\r\n            ))}\r\n          </PhotosContainer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlbumPhoto from \"../../img/Album.jpg\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid black;\r\n  margin: 20px;\r\n  width: 200px;\r\n  font-size: 12px;\r\n  text-align: center;\r\n`;\r\n\r\nexport default class Album extends React.Component {\r\n  state = { numberOfPhotos: 0 };\r\n\r\n  componentDidMount() {\r\n    const { album } = this.props;\r\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        return res.filter((photo) => photo.albumId === album.id);\r\n      })\r\n      .then((res) => {\r\n        this.setState({ numberOfPhotos: res.length });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { album, userId } = this.props;\r\n    const { numberOfPhotos } = this.state;\r\n    return (\r\n      <Wrapper key={album.id}>\r\n        <Link to={`/albums/${userId}/photos/${album.id}`}>\r\n          <div\r\n            className=\"d-flex flex-column justify-content-between\"\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <div>\r\n              <p>{album.title}</p>\r\n            </div>\r\n            <div className=\"mt-auto\">\r\n              <img src={AlbumPhoto} alt=\"AlbumPhoto\" width=\"100%\" />\r\n              <span>photos: {numberOfPhotos}</span>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getData } from \"../../getDataFunc\";\r\n\r\nimport Album from \"./Album\";\r\n\r\nconst AlbumsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default class Albums extends React.Component {\r\n  state = {\r\n    albums: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { userId } = this.props.match.params;\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    getData(\"https://jsonplaceholder.typicode.com/albums\")\r\n      .then((res) => res.filter((item) => item.userId === +userId))\r\n      .then((res) => this.setState({ albums: res, isLoading: false }))\r\n      .catch((error) => alert(error));\r\n  }\r\n  render() {\r\n    const { albums, isLoading } = this.state;\r\n    const { userId } = this.props.match.params;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Albums</h1>\r\n        <Link to={`/`}>Назад</Link>\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <AlbumsContainer>\r\n            {albums.map((album) => (\r\n              <Album album={album} userId={userId} key={album.id} />\r\n            ))}\r\n          </AlbumsContainer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getData } from \"../../getDataFunc\";\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid black;\r\n  margin: 20px;\r\n  padding: 10px;\r\n  width: 200px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst UsersContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default class Users extends React.Component {\r\n  state = {\r\n    users: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    getData(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => {\r\n        this.setState({ users: res, isLoading: false });\r\n      })\r\n      .catch((error) => alert(error));\r\n  }\r\n\r\n  render() {\r\n    const { users, isLoading } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Users</h1>\r\n\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <UsersContainer>\r\n            {users.map((user) => (\r\n              <Wrapper key={user.id}>\r\n                <Link to={`/albums/${user.id}`}>{user.name}</Link>\r\n              </Wrapper>\r\n            ))}\r\n          </UsersContainer>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport Photos from \"./pages/Photos\";\nimport Albums from \"./pages/Albums\";\nimport Users from \"./pages/Users\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Router basename=\"/gallery_on_react\">\n        <Switch>\n          <Layout>\n            <Route exact path=\"/\" component={Users} />\n            <Route exact path=\"/albums/:userId\" component={Albums} />\n            <Route\n              exact\n              path=\"/albums/:userId/photos/:albumId\"\n              component={Photos}\n            />\n          </Layout>\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/style.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}